#BlueJ class context
comment0.target=Canada
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Canada\ here.\r\n\r\n\ @author\ Monika\ Szucs\r\n\ @version\ November\ 3\ 2018\r\n
comment1.params=
comment1.target=Canada()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Canada\r\n
comment2.params=
comment2.target=int\ getTotalPopulation()
comment2.text=\r\n\ Method\r\n\ \r\n\ @return\ the\ sum\r\n
comment3.params=
comment3.target=java.lang.String\ getLowestPopulation()
comment3.text=\r\n\ Method\r\n\ \r\n\ @return\ the\ Lowest\ population\ name\r\n
comment4.params=province
comment4.target=int\ getPopulation(java.lang.String)
comment4.text=\r\n\ Method\r\n\ \r\n\ @return\ province\ population\ \r\n\ @return\ a\ negative\ one\ if\ no\ such\ province\r\n
comment5.params=min\ max
comment5.target=java.lang.String[]\ getProvincesWithPopulationBetween(int,\ int)
comment5.text=\r\n\ Method\r\n\ \r\n\ @return\ matching\ provinces\r\n\ @return\ if\ province\ with\ population\ between\ min\ and\ max\r\n
comment6.params=name
comment6.target=boolean\ isProvinceInCanada(java.lang.String)
comment6.text=\r\n\ Method\r\n\ \r\n\ @return\ true\ if\ province\ found\r\n\ @return\ false\ if\ province\ not\ found\ \r\n
comment7.params=substring
comment7.target=java.lang.String[]\ getProvincesWhoseNameContains(java.lang.String)
comment7.text=\r\n\ Method\r\n\ \r\n\ @return\ null\ if\ province\ name\ does\ not\ contain\ the\ substring\r\n\ @return\ matchingProvinces\ if\ the\ substring\ matches\ a\ province\ \r\n
comment8.params=substring
comment8.target=ProvinceTerritory[]\ getMoreProvincesWhoseNameContains(java.lang.String)
comment8.text=\r\n\ Method\r\n\ \r\n\ @return\ null\ if\ no\ province\ found\ from\ substring\ entered\r\n\ @return\ provinceTerritories\ if\ substring\ found\ provinces\ matching\ \r\n
comment9.params=letter
comment9.target=java.lang.String[]\ getProvincesWhoseNameStartsWith(char)
comment9.text=\r\n\ Method\r\n\ \r\n\ @return\ null\ if\ no\ province\ found\ from\ character\ letter\r\n\ @return\ matching\ provinces\ if\ letter\ entered\ finds\ a\ province\ that\ starts\ with\ the\ same\ letter\r\n
numComments=10
